{"version":3,"sources":["components/Navigation/Navigation.module.scss","components/MovieCast/MovieCast.module.scss","components/AboutMovie/AboutMovie.module.scss","components/Filter/Filter.module.scss","pages/MoviePage/MoviePage.module.scss","components/Header/Header.module.scss","API/api.js","services/auth.service.js","services/auth-header.js","services/user.service.js","redux/reducers/reducer.js","components/MovieItem.jsx","components/MoviesList.jsx","components/Pagination.jsx","components/LoadingSpinner.jsx","pages/Favorite/Favorite.jsx","components/Filter/Filter.jsx","pages/AllMovies/AllMovies.jsx","hooks/useFilter.js","utils/utils.js","pages/Profile/Profile.jsx","components/AboutMovie/AboutMovie.jsx","components/MovieCast/MovieCast.jsx","pages/MoviePage/MoviePage.jsx","components/UserItem.jsx","components/UsersList.jsx","pages/AllUsers/AllUsers.jsx","pages/Friends/Friends.jsx","router/routes.js","components/Signup/Signup.jsx","components/Login/Login.jsx","components/Navigation/Navigation.jsx","components/Header/Header.jsx","components/AppRouter.jsx","redux/store.js","App.js","index.js"],"names":["module","exports","getAllMovies","a","axios","get","response","data","getMovieById","id","getCastByMovieId","AuthService","register","username","age","email","password","post","user","login","then","accessToken","localStorage","setItem","JSON","stringify","logout","removeItem","authHeader","parse","getItem","Authorization","UserService","getUserProfile","API_URL","headers","updateUserProfile","patch","addMovie","movie","getFavorite","removeMovie","movieId","getFriends","getUserFriends","addFriend","friendId","removeFriend","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SET_MESSAGE","CLEAR_MESSAGE","SET_USER_PROFILE","SET_FAVORITE_MOVIES","LOADING","SET_ALL_MOVIES","SET_ALL_USERS","SET_FRIENDS","initialState","allMovies","isLoading","isLoggedIn","message","favoriteMovies","userProfile","userFriends","allUsers","setMessage","type","payload","clearMessage","setFavoriteMovies","setUserProfile","setFriends","users","reducer","state","action","MovieItem","isFavorite","dispatch","useDispatch","addToFavorite","Col","className","Card","Img","variant","src","image","medium","Body","Title","name","Text","genres","length","join","rating","average","language","Footer","Button","onClick","movies","to","MoviesList","Row","xs","sm","md","map","PaginationMovies","totalPage","changePage","active","pagesArray","i","pageItem","Pagination","Item","number","push","activePage","find","item","props","filter","page","prev","next","prev1","next1","getPagesArray","LoadingSpinner","Spinner","animation","size","Favorite","useSelector","useState","setPage","viewMovies","setViewMovies","useEffect","slice","Math","ceil","Filter","options","setFilter","cls","value","sort","onChange","event","target","option","query","placeholder","AllMovies","filteredMovies","useMemo","some","genre","toLowerCase","includes","useFilter","genresList","genreHeap","reduce","acc","uniqueGenres","Set","getGenresByMoviesList","Profile","setUsername","setAge","setEmail","style","maxWidth","Form","onSubmit","preventDefault","Group","Label","Control","e","required","AboutMovie","original","alt","body","summary","replace","href","officialSite","MovieCast","cast","person","character","card","role","MoviePage","useParams","movieInfo","setMovieInfo","isLoadInfo","setIsLoadInfo","fetchMovie","UserItem","isFriend","addToFriend","_id","UsersList","AllUsers","findUsers","Friends","privateRoutes","path","component","exact","publicRoutes","history","useHistory","successful","setSuccessful","userNameRef","useRef","ageRef","emailRef","passwordRef","current","Promise","resolve","error","toString","reject","setTimeout","catch","ref","unmounted","Navigation","locatiton","useLocation","match","matchPath","pathname","Container","nav","navLogo","navBar","visible","hidden","navLink","activeClassName","Header","header","AppRouter","listen","location","route","store","createStore","applyMiddleware","thunkMiddleware","App","ReactDOM","render","document","getElementById"],"mappings":"wGACAA,EAAOC,QAAU,CAAC,IAAM,wBAAwB,OAAS,2BAA2B,QAAU,4BAA4B,QAAU,4BAA4B,OAAS,2BAA2B,OAAS,2BAA2B,QAAU,8B,mBCAlPD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,KAAO,wBAAwB,KAAO,wBAAwB,KAAO,0B,mBCAtHD,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,KAAO,2B,mBCA3DD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,MAAQ,2B,mBCA1BD,EAAOC,QAAU,CAAC,OAAS,yB,+KCCdC,EAAY,uCAAG,4BAAAC,EAAA,sEACHC,IAAMC,IAAI,uCADP,cACpBC,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,qDAKZC,EAAY,uCAAG,WAAOC,GAAP,eAAAN,EAAA,sEACHC,IAAMC,IAAN,uCAA0CI,IADvC,cACpBH,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZG,EAAgB,uCAAG,WAAOD,GAAP,eAAAN,EAAA,sEACPC,IAAMC,IAAN,uCAA0CI,EAA1C,UADO,cACxBH,EADwB,yBAEvBA,EAASC,MAFc,2CAAH,sDC4BdI,EANK,CAClBC,SA/Be,SAACC,EAAUC,EAAKC,EAAOC,GACtC,OAAOZ,IAAMa,KAAe,qBAAsB,CAChDC,KAAM,CACJL,WACAC,MACAC,QACAC,eA0BJG,MArBY,SAACJ,EAAOC,GACpB,OAAOZ,IACJa,KAAe,kBAAmB,CACjCF,QACAC,aAEDI,MAAK,SAACd,GAKL,OAJIA,EAASC,KAAKc,aAChBC,aAAaC,QAAQ,oBAAqBC,KAAKC,UAAUnB,EAASC,OAG7DD,EAASC,SAWpBmB,OAPa,WACbJ,aAAaK,WAAW,uBC/BbC,EAAa,WACxB,IAAMV,EAAOM,KAAKK,MAAMP,aAAaQ,QAAQ,sBAE7C,OAAIZ,GAAQA,EAAKG,YACR,CAAEU,cAAe,UAAYb,EAAKG,aAElC,ICgDIW,EAZK,CAClBC,eArCqB,WACrB,OAAO7B,IAAMC,IAAI6B,gBAA2B,CAAEC,QAASP,OAqCvDQ,kBAlCwB,SAAClB,GACzB,OAAOd,IAAMiC,MAAMH,gBAA2BhB,EAAM,CAACiB,QAASP,OAkC9DU,SAXe,SAACC,GAChB,OAAOnC,IAAMiC,MAAMH,yBAAoC,CAAEK,SAAS,CAACJ,QAASP,OAW5EY,YAhBkB,WAClB,OAAOpC,IAAMC,IAAI6B,yBAAoC,CAAEC,QAASP,OAgBhEa,YATkB,SAACC,GACnB,OAAOtC,IAAMiC,MAAMH,4BAAuC,CAAEQ,WAAW,CAACP,QAASP,OASjFe,WAlCiB,WACjB,OAAOvC,IAAMC,IAAI6B,uBAAkC,CAAEC,QAASP,OAkC9DgB,eA/BqB,WACrB,OAAOxC,IAAMC,IAAI6B,wBAAmC,CAAEC,QAASP,OA+B/DiB,UA5BgB,SAACC,GACjB,OAAO1C,IAAMiC,MAAMH,0BAAqC,CAAEY,YAAY,CAAEX,QAASP,OA4BjFmB,aAzBmB,SAACD,GACpB,OAAO1C,IAAMiC,MAAMH,6BAAwC,CAAEY,YAAY,CAAEX,QAASP,QCvBhFoB,EAAmB,mBACnBC,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAa,aACbC,EAAS,SAETC,EAAc,cACdC,EAAgB,gBAEhBC,EAAmB,mBACnBC,EAAsB,sBACtBC,EAAU,UACVC,EAAiB,iBAEjBC,EAAgB,gBAEhBC,EAAc,cAEd1C,EAAOM,KAAKK,MAAMP,aAAaQ,QAAQ,sBAEvC+B,EAAe,CACnBC,UAAW,GACXC,WAAW,EACXC,aAAY9C,EACZA,KAAMA,GAAc,KACpB+C,QAAS,GACTC,eAAgB,GAChBC,YAAa,GACbC,YAAa,GACbC,SAAU,IA8FCC,EAAa,SAACL,GAAD,MAAc,CACtCM,KAAMlB,EACNmB,QAASP,IAGEQ,EAAe,iBAAO,CACjCF,KAAMjB,IAoEFS,EAAY,SAAEA,GAAF,MAAkB,CAACQ,KAAMd,EAASe,QAAST,IAIvDW,EAAoB,SAAER,GAAF,MAAuB,CAACK,KAAMf,EAAqBgB,QAASN,IAEhFS,EAAiB,SAAER,GAAF,MAAoB,CAACI,KAAMhB,EAAkBiB,QAASL,IAIvES,EAAa,SAAEC,GAAF,MAAc,CAACN,KAAMX,EAAaY,QAASK,IAsD/CC,EArOC,WAAqC,IAAnCC,EAAkC,uDAA1BlB,EAAcmB,EAAY,uCAClD,OAAQA,EAAOT,MACb,KAAKd,EACH,OAAO,2BACFsB,GADL,IAEEhB,UAAWiB,EAAOR,UAGtB,KAAKd,EACH,OAAO,2BACFqB,GADL,IAEEjB,UAAWkB,EAAOR,UAGtB,KAAKhB,EACH,OAAO,2BACFuB,GADL,IAEEb,eAAgBc,EAAOR,UAG3B,KAAKjB,EACH,OAAO,2BACFwB,GADL,IAEEZ,YAAaa,EAAOR,UAGxB,KAAKZ,EACH,OAAO,2BACFmB,GADL,IAEEX,YAAaY,EAAOR,UAGxB,KAAKb,EACH,OAAO,2BACFoB,GADL,IAEEV,SAAUW,EAAOR,UAGrB,KAAKnB,EACH,OAAO,2BACF0B,GADL,IAEEd,QAASe,EAAOR,UAGpB,KAAKlB,EACH,OAAO,2BACFyB,GADL,IAEEd,QAAS,KAGb,KAAKjB,EAML,KAAKC,EACH,OAAO,2BACF8B,GADL,IAEEf,YAAY,IAGhB,KAAKd,EACH,OAAO,2BACF6B,GADL,IAEEf,YAAY,EACZ9C,KAAM8D,EAAOR,QAAQtD,OAGzB,KAAKiC,EACH,OAAO,2BACF4B,GADL,IAEEf,YAAY,EACZ9C,KAAM,OAEV,KAAKkC,EACH,OAAO,2BACF2B,GADL,IAEEf,YAAY,EACZ9C,KAAM,KACNiD,YAAa,OAGjB,QACE,OAAOY,I,sDCxDEE,EAnDG,SAAC,GAA2B,IAAD,EAAxB1C,EAAwB,EAAxBA,MAAO2C,EAAiB,EAAjBA,WACpBC,EAAWC,cAEXC,EAAa,uCAAG,sBAAAlF,EAAA,sEACd6B,EAAYM,SAASC,GADP,2CAAH,qDAQnB,OACI,cAAC+C,EAAA,EAAD,CAAKC,UAAU,OAAf,SACE,eAACC,EAAA,EAAD,CAAMD,UAAU,WAAhB,UACE,cAACC,EAAA,EAAKC,IAAN,CAAUC,QAAQ,MAAMC,IAAG,UAAGpD,EAAMqD,aAAT,aAAG,EAAaC,SAC3C,eAACL,EAAA,EAAKM,KAAN,WACE,cAACN,EAAA,EAAKO,MAAN,CAAYR,UAAU,eAAtB,SAAsChD,EAAMyD,OAC5C,cAACR,EAAA,EAAKS,KAAN,CAAWV,UAAU,aAArB,SACGhD,EAAM2D,OAAOC,OACV5D,EAAM2D,OAAOE,KAAK,MAClB,sBAEN,eAACZ,EAAA,EAAKS,KAAN,CAAWV,UAAU,UAArB,UACE,mBAAGA,UAAU,sCACZhD,EAAM8D,OAAOC,QAAU/D,EAAM8D,OAAOC,QAAU,wBAEjD,eAACd,EAAA,EAAKS,KAAN,CAAWV,UAAU,aAArB,uBACahD,EAAMgE,eAGrB,eAACf,EAAA,EAAKgB,OAAN,CAAajB,UAAU,qBAAvB,UACGL,EACC,eAACuB,EAAA,EAAD,CAAQlB,UAAU,kBAAkBmB,QAzBrB,WD6NM,IAACjG,EC5NhC0E,GD4NgC1E,EC5NH8B,EAAM9B,GD4NJ,uCAAQ,WAAQ0E,GAAR,eAAAhF,EAAA,sEACpB6B,EAAYS,YAAYhC,GADJ,OACnCkG,EADmC,OAEzCxB,EAAST,EAAkBiC,EAAOpG,OAFO,2CAAR,yDCpMrB,UACE,mBAAGgF,UAAU,qBADf,0BAIA,eAACkB,EAAA,EAAD,CAAQlB,UAAU,mBAAmBmB,QAASrB,EAA9C,UACE,mBAAGE,UAAU,+BADf,qBAKF,eAAC,IAAD,CAAMA,UAAU,eAAeqB,GAAE,iBAAYrE,EAAM9B,IAAnD,UACA,mBAAG8E,UAAU,gCADb,0BCrCGsB,EAZI,SAAC,GAA0B,IAAzBF,EAAwB,EAAxBA,OAAQzB,EAAgB,EAAhBA,WAC3B,OACE,cAAC4B,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAvB,SACGN,EAAOO,KAAI,SAAC3E,GACX,OACE,cAAC,EAAD,CAA0BA,MAAOA,EAAO2C,WAAYA,GAApC3C,EAAM9B,U,QCgCjB0G,GAtCU,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,WAAYC,EAAY,EAAZA,OA8B1CC,EA7BgB,SAACH,GAGrB,IAFA,IAAIG,EAAa,GADkB,WAG1BC,GACP,IAAMC,EACJ,cAACC,EAAA,EAAWC,KAAZ,CAAyBC,OAAQJ,EAAGF,OAAQE,IAAMF,EAAQZ,QAAS,kBAAMW,EAAWG,IAApF,SACGA,GADmBA,GAKxBD,EAAWM,KAAKJ,IAPTD,EAAI,EAAGA,GAAKJ,EAAWI,IAAM,EAA7BA,GAUT,IAAMM,EAAaP,EAAWQ,MAAK,SAAAC,GAAI,OAAIA,EAAKC,MAAMX,UAEtD,OAAGQ,EACMP,EAAWW,QAAO,SAAAC,GACvB,IAAMC,EAAON,EAAWG,MAAML,OAAS,EACjCS,EAAOP,EAAWG,MAAML,OAAS,EACnCU,EAAQD,EAAOjB,EAAY,EAAIgB,GAAQC,EAAOjB,GAAa,EAAIgB,EAC/DG,EAAQH,EAAO,EAAIC,EAAOD,EAAOC,EAErC,OAAOF,EAAKF,MAAML,OAASU,GAASH,EAAKF,MAAML,OAASW,KAIrDhB,EAGUiB,CAAcpB,GACjC,OACE,cAACM,EAAA,EAAD,CAAYnC,UAAU,gCAAtB,SACGgC,K,SCzBQkB,GARQ,WACrB,OACA,cAACC,GAAA,EAAD,CAASC,UAAU,SAASC,KAAK,KAAKlD,QAAQ,UAA9C,SACE,sBAAMH,UAAU,kBAAhB,2BC0CWsD,GAxCE,WAEf,IAAM3E,EAAiB4E,aAAa,SAAA/D,GAAK,OAAIA,EAAMb,kBAC7CH,EAAY+E,aAAa,SAAA/D,GAAK,OAAIA,EAAMhB,aACxCoB,EAAWC,cAEjB,EAAwB2D,mBAAS,GAAjC,mBAAOZ,EAAP,KAAaa,EAAb,KACA,EAAoCD,mBAAS,IAA7C,mBAAOE,EAAP,KAAmBC,EAAnB,KAGAC,qBAAU,WACRhE,ELsN+B,uCAAM,WAAQA,GAAR,eAAAhF,EAAA,6DACvCgF,EAASpB,GAAU,IADoB,SAElB/B,EAAYQ,cAFM,OAEjCmE,EAFiC,OAGvCxB,EAAST,EAAkBiC,EAAOpG,OAClC4E,EAASpB,GAAU,IAJoB,2CAAN,yDKrN9B,IAEHoF,qBAAU,WACRD,EAAc,YAAIhF,EAAekF,MAVhB,IAUuBjB,EAAO,GAV9B,GAU6CA,OAC7D,CAACjE,EAAgBiE,IAMpB,OACE,gCACE,qBAAK5C,UAAU,wCAAf,SACE,cAAC,GAAD,CACE8B,WARW,SAACc,GAClBa,EAAQb,IAQFf,UAAWiC,KAAKC,KAAKpF,EAAeiC,OAtBzB,IAuBXmB,OAAQa,MAGVpE,EACA,cAAC,GAAD,IACCG,EAAeiC,OAChB,cAAC,EAAD,CAAYQ,OAAQsC,EAAa/D,YAAY,IADpB,oBAAIK,UAAU,8BAAd,2B,oBCNlBgE,GAhCA,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,QAAStB,EAAuB,EAAvBA,OAAQuB,EAAe,EAAfA,UAShC,OACE,sBAAKlE,UAAWmE,KAAIxB,OAApB,UACE,yBACAyB,MAAOzB,EAAO0B,KACdC,SAZY,SAAEC,GAChBL,EAAU,2BAAIvB,GAAL,IAAa0B,KAAME,EAAMC,OAAOJ,OAAS,OAShD,UAIE,wBAAQA,MAAM,GAAd,wBACCH,EAAQtC,KAAI,SAAA8C,GAAM,OACjB,wBAAqBL,MAAOK,EAA5B,SACGA,GADUA,SAMjB,uBACEL,MAAOzB,EAAO+B,OAAO,GACrBJ,SApBY,SAAEC,GAClBL,EAAU,2BAAIvB,GAAL,IAAa+B,MAAOH,EAAMC,OAAOJ,OAAS,OAoB/CO,YAAY,gCCgCLC,GAjDG,WAChB,IAAMrG,EAAYgF,aAAa,SAAA/D,GAAK,OAAIA,EAAMjB,aACxCC,EAAY+E,aAAa,SAAA/D,GAAK,OAAIA,EAAMhB,aAExCoB,EAAWC,cAGjB,EAA4B2D,mBAAS,CAACkB,MAAO,GAAIL,KAAM,KAAvD,mBAAO1B,EAAP,KAAeuB,EAAf,KACA,EAAwBV,mBAAS,GAAjC,mBAAOZ,EAAP,KAAaa,EAAb,KACA,EAAoCD,mBAAS,IAA7C,mBAAOE,EAAP,KAAmBC,EAAnB,KAEMkB,ECtBiB,SAAClC,EAAQpE,GAgBhC,OAfuBuG,mBAAQ,WAC7B,OAAOvG,EAAUoE,QAAQ,SAAA3F,GAEvB,OAAI2F,EAAO0B,OAAS1B,EAAO+B,MAClB1H,EAAM2D,OAAOoE,MAAM,SAAAC,GAAK,OAAIA,EAAMC,cAAcC,SAASvC,EAAO0B,KAAKY,kBAGxEtC,EAAO0B,MAAS1B,EAAO+B,MAItB1H,EAAM2D,OAAOoE,MAAM,SAAAC,GAAK,OAAIA,EAAMC,cAAcC,SAASvC,EAAO0B,KAAKY,mBAAmBjI,EAAMyD,KAAKwE,cAAcC,SAASvC,EAAO+B,MAAMO,eAHrIjI,OAKV,CAAC2F,EAAQpE,IDQW4G,CAAUxC,EAAQpE,GACnC6G,EEzB6B,SAAChE,GACpC,IAAMiE,EAAYjE,EAAOkE,QAAO,SAACC,EAAI9C,GAEnC,OADA8C,EAAIjD,KAAJ,MAAAiD,EAAG,YAAS9C,EAAK9B,SACV4E,IACN,IACGC,EAAe,IAAIC,IAAIJ,GAG7B,OAFmB,YAAIG,GAAcnB,OFmBlBqB,CAAsBnH,GAEzCqF,qBAAU,WACRhE,EPyL0B,uCAAM,WAAQA,GAAR,eAAAhF,EAAA,6DAClCgF,EAASpB,GAAU,IADe,SAEb7D,IAFa,OAE5ByG,EAF4B,OAGlCxB,EAbqC,CAACZ,KAAMb,EAAgBc,QAatCmC,IACtBxB,EAASpB,GAAU,IAJe,2CAAN,yDOxLzB,IAEHoF,qBAAU,WACRD,EAAc,YAAIkB,EAAehB,MAbhB,IAauBjB,EAAO,GAb9B,GAa6CA,OAC7D,CAACiC,EAAgBjC,IAMpB,OACE,gCACE,sBAAK5C,UAAU,iDAAf,UACE,cAAC,GAAD,CACE2C,OAAQA,EACRuB,UAAWA,EACXD,QAASmB,IAEX,cAAC,GAAD,CACEtD,WAbW,SAACc,GAClBa,EAAQb,IAaFf,UAAWiC,KAAKC,KAAKc,EAAejE,OA9BzB,IA+BXmB,OAAQa,OAGVpE,EACA,cAAC,GAAD,IACCqG,EAAejE,OAChB,cAAC,EAAD,CAAYQ,OAAQsC,EAAY/D,YAAY,IADnB,oBAAIK,UAAU,8BAAd,2B,SGSlB2F,GA1DC,WACd,IAAMhK,EAAO4H,aAAY,SAAA/D,GAAK,OAAIA,EAAM7D,QAClCiD,EAAc2E,aAAY,SAAA/D,GAAK,OAAIA,EAAMZ,eAC/C,EAAgC4E,oBAAoB,OAAX5E,QAAW,IAAXA,OAAA,EAAAA,EAAatD,WAAYK,EAAKL,UAAvE,mBAAOA,EAAP,KAAiBsK,EAAjB,KACA,EAAsBpC,oBAAoB,OAAX5E,QAAW,IAAXA,OAAA,EAAAA,EAAarD,MAAOI,EAAKJ,KAAxD,mBAAOA,EAAP,KAAYsK,EAAZ,KACA,EAA0BrC,oBAAoB,OAAX5E,QAAW,IAAXA,OAAA,EAAAA,EAAapD,QAASG,EAAKH,OAA9D,mBAAOA,EAAP,KAAcsK,EAAd,KAEMlG,EAAWC,cAiBjB+D,qBAAU,WACRhE,EV6L4B,uCAAM,WAAQA,GAAR,eAAAhF,EAAA,6DACpCgF,EAASpB,GAAU,IADiB,SAEb/B,EAAYC,iBAFC,OAE9B3B,EAF8B,OAGpC6E,EAASR,EAAerE,EAASC,KAAKW,OACtCiE,EAASpB,GAAU,IAJiB,2CAAN,yDU5L3B,IAMH,OACE,cAACyB,EAAA,EAAD,CAAMD,UAAU,UAAU+F,MAAO,CAACC,SAAU,SAA5C,SACE,eAAC/F,EAAA,EAAKM,KAAN,WACE,oBAAIP,UAAU,mBAAd,qBACA,eAACiG,GAAA,EAAD,CAAMC,SARS,SAAC3B,GACpBA,EAAM4B,iBACNvG,EV+L6B,SAACjE,GAAD,8CAAU,WAAQiE,GAAR,eAAAhF,EAAA,6DACzCgF,EAASpB,GAAU,IADsB,SAElB/B,EAAYI,kBAAkBlB,GAFZ,OAEnCZ,EAFmC,OAGzC6E,EAASR,EAAerE,EAASC,KAAKW,OACtCiE,EAASpB,GAAU,IAJsB,2CAAV,sDU/LpB3B,CAAkB,CAACvB,WAAUC,MAAKC,YAMvC,UACA,eAACyK,GAAA,EAAKG,MAAN,CAAYlL,GAAG,WAAf,UACM,cAAC+K,GAAA,EAAKI,MAAN,mBACA,cAACJ,GAAA,EAAKK,QAAN,CAActH,KAAK,OAAOoF,MAAO9I,EAAUgJ,SA9B9B,SAACiC,GACxB,IAAMjL,EAAWiL,EAAE/B,OAAOJ,MAC1BwB,EAAYtK,IA4BqEkL,UAAQ,OAEjF,eAACP,GAAA,EAAKG,MAAN,CAAYlL,GAAG,MAAf,UACE,cAAC+K,GAAA,EAAKI,MAAN,kBACA,cAACJ,GAAA,EAAKK,QAAN,CAActH,KAAK,SAASoF,MAAO7I,EAAK+I,SA7BhC,SAACiC,GACnB,IAAMhL,EAAMgL,EAAE/B,OAAOJ,MACrByB,EAAOtK,IA2BkEiL,UAAQ,OAEzE,eAACP,GAAA,EAAKG,MAAN,CAAYlL,GAAG,QAAf,UACE,cAAC+K,GAAA,EAAKI,MAAN,oBACA,cAACJ,GAAA,EAAKK,QAAN,CAActH,KAAK,QAAQoF,MAAO5I,EAAO8I,SA5B/B,SAACiC,GACrB,IAAM/K,EAAQ+K,EAAE/B,OAAOJ,MACvB0B,EAAStK,IA0BmEgL,UAAQ,OAE5E,cAACtF,EAAA,EAAD,CAAQlC,KAAK,SAASgB,UAAU,aAAhC,6B,oBCbGyG,GApCI,SAAC,GAAa,IAAZzJ,EAAW,EAAXA,MACb8C,EAAa,uCAAG,sBAAAlF,EAAA,sEACd6B,EAAYM,SAASC,GADP,2CAAH,qDAInB,OACE,sBAAKgD,UAAWmE,KAAInH,MAApB,UACE,qBAAKoD,IAAKpD,EAAMqD,MAAMqG,SAAUC,IAAK3J,EAAMyD,OAC3C,sBAAKT,UAAWmE,KAAIyC,KAApB,UACE,6BAAK5J,EAAMyD,OACX,gCACE,yCACWzD,EAAM2D,OAAOC,OAClB5D,EAAM2D,OAAOE,KAAK,OAClB,uBAEN,4CACc7D,EAAMgC,QAEpB,8BACE,mBAAGgB,UAAU,sCACZhD,EAAM8D,OAAOC,QAAU/D,EAAM8D,OAAOC,QAAU,wBAEjD,2CAAc/D,EAAMgE,eAEtB,4BAAIhE,EAAM6J,QAAQC,QAAQ,gBAAiB,MAC3C,4BAAG,mBAAGC,KAAM/J,EAAMgK,aAAf,6BACH,eAAC9F,EAAA,EAAD,CAAQlB,UAAU,mBAAmBmB,QAASrB,EAA9C,UACE,mBAAGE,UAAU,+BADf,4B,oBCLOiH,GAzBG,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAClB,OACE,sBAAKlH,UAAWmE,KAAI+C,KAApB,UACE,sCACA,6BACGA,EAAKvF,KAAI,SAAAc,GACR,IAAO0E,EAAqB1E,EAArB0E,OAAQC,EAAa3E,EAAb2E,UACf,OACE,qBAAoBpH,UAAWmE,KAAIkD,KAAnC,UACE,qBAAKjH,IAAK+G,EAAO9G,MAAMC,OAAQqG,IAAKQ,EAAO1G,OAC3C,sBAAKT,UAAWmE,KAAIyC,KAApB,UACE,6BAAKO,EAAO1G,OACZ,oBAAGT,UAAWmE,KAAImD,KAAlB,UACE,sCADF,IACmBF,EAAU3G,aALxB0G,EAAOjM,a,oBC6BbqM,GA7BG,WAChB,IAAQrM,EAAOsM,cAAPtM,GACR,EAAkCsI,mBAAS,CAACxG,MAAO,KAAMkK,KAAM,OAA/D,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAoClE,oBAAS,GAA7C,mBAAOmE,EAAP,KAAmBC,EAAnB,KAEMC,EAAU,uCAAG,8BAAAjN,EAAA,6DACjBgN,GAAc,GADG,SAEG3M,EAAaC,GAFhB,cAEX8B,EAFW,gBAGE7B,EAAiBD,GAHnB,OAGXgM,EAHW,OAIjBQ,EAAa,CAAC1K,MAAOA,EAAOkK,KAAMA,IAClCU,GAAc,GALG,2CAAH,qDAYhB,OAJAhE,qBAAU,WACRiE,MACC,IAGD,mCACIF,EACA,sBAAK3H,UAAWmE,KAAInH,MAApB,UACE,cAAC,GAAD,CAAYA,MAAOyK,EAAUzK,QAC7B,cAAC,GAAD,CAAWkK,KAAMO,EAAUP,UAE7B,cAAC,GAAD,OCUOY,GAtCE,SAAC,GAAwB,IAAtBnM,EAAqB,EAArBA,KAAMoM,EAAe,EAAfA,SAClBnI,EAAWC,cAEXmI,EAAW,uCAAG,sBAAApN,EAAA,sEACZ6B,EAAYa,UAAU3B,EAAKsM,KADf,2CAAH,qDAQjB,OACE,cAAClI,EAAA,EAAD,CAAKC,UAAU,OAAf,SACE,eAACC,EAAA,EAAD,CAAMD,UAAU,WAAhB,UACE,eAACC,EAAA,EAAKM,KAAN,WACE,cAACN,EAAA,EAAKO,MAAN,CAAYR,UAAU,eAAtB,SAAsCrE,EAAKL,WAC3C,eAAC2E,EAAA,EAAKS,KAAN,CAAWV,UAAU,aAArB,oBACUrE,EAAKH,SAEf,eAACyE,EAAA,EAAKS,KAAN,CAAWV,UAAU,aAArB,kBACQrE,EAAKJ,UAGf,cAAC0E,EAAA,EAAKgB,OAAN,CAAajB,UAAU,qBAAvB,SACG+H,EACC,cAAC7G,EAAA,EAAD,CAAQlB,UAAU,kBAAkBmB,QAlBrB,WdsPC,IAACjG,EcrPzB0E,GdqPyB1E,EcrPHS,EAAKsM,IdqPH,uCAAQ,WAAQrI,GAAR,eAAAhF,EAAA,sEACX6B,EAAYe,aAAatC,GADd,OAC5BH,EAD4B,OAElC6E,EAASP,EAAWtE,EAASC,KAAKsE,QAFA,2CAAR,yDcpOhB,2BAGA,cAAC4B,EAAA,EAAD,CAAQlB,UAAU,mBAAmBmB,QAAS6G,EAA9C,mCCnBGE,GAZG,SAAC,GAAuB,IAAtB5I,EAAqB,EAArBA,MAAOyI,EAAc,EAAdA,SACzB,OACE,cAACxG,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAvB,SACGpC,EAAMqC,KAAI,SAAChG,GACV,OACE,cAAC,GAAD,CAAyBA,KAAMA,EAAMoM,SAAUA,GAAhCpM,EAAKsM,WCqBfE,GArBE,WACf,IAAMrJ,EAAWyE,aAAa,SAAA/D,GAAK,OAAIA,EAAMV,YACvCN,EAAY+E,aAAa,SAAA/D,GAAK,OAAIA,EAAMhB,aAExCoB,EAAWC,cAMjB,OAJA+D,qBAAU,WACRhE,EhBsOyB,uCAAM,WAAQA,GAAR,eAAAhF,EAAA,6DACjCgF,EAASpB,GAAU,IADc,SAEV/B,EAAYW,aAFF,OAE3BrC,EAF2B,OAGjC6E,GAxCoBN,EAwCCvE,EAASC,KAAKoN,UAxCH,CAACpJ,KAAMZ,EAAea,QAASK,KAyC/DM,EAASpB,GAAU,IAJc,iCArCf,IAAEc,IAqCa,OAAN,yDgBrOxB,IAGD,8BACId,EACA,cAAC,GAAD,IACCM,EAAS8B,OACV,cAAC,GAAD,CAAYtB,MAAOR,EAAUiJ,UAAU,IADpB,oBAAI/H,UAAU,8BAAd,0BCOZqI,GArBC,WACd,IAAMxJ,EAAc0E,aAAa,SAAA/D,GAAK,OAAIA,EAAMX,eAC1CL,EAAY+E,aAAa,SAAA/D,GAAK,OAAIA,EAAMhB,aAExCoB,EAAWC,cAMjB,OAJA+D,qBAAU,WACRhE,EjB6O4B,uCAAM,WAAQA,GAAR,eAAAhF,EAAA,6DACpCgF,EAASpB,GAAU,IADiB,SAEb/B,EAAYY,iBAFC,OAE9BtC,EAF8B,OAGpC6E,EAASP,EAAWtE,EAASC,KAAKsE,QAClCM,EAASpB,GAAU,IAJiB,2CAAN,yDiB5O3B,IAGD,8BACIA,EACA,cAAC,GAAD,IACCK,EAAY+B,OACb,cAAC,GAAD,CAAYtB,MAAOT,EAAakJ,UAAU,IADpB,oBAAI/H,UAAU,8BAAd,0BCdjBsI,GAAgB,CAC3B,CAAEC,KAAM,aAAcC,UAAWjB,GAAWkB,OAAO,GACnD,CAAEF,KAAM,YAAaC,UAAWlF,GAAUmF,OAAO,GACjD,CAAEF,KAAM,WAAYC,UAAW7C,GAAS8C,OAAO,GAC/C,CAAEF,KAAM,UAAWC,UAAW5D,GAAW6D,OAAO,GAChD,CAAEF,KAAM,SAAUC,UAAWL,GAAUM,OAAO,GAC9C,CAAEF,KAAM,WAAYC,UAAWH,GAASI,OAAO,IAGpCC,GAAe,CAC1B,CAAEH,KAAM,UAAWC,UCXN,WACb,IAAMG,EAAUC,cAChB,EAAoCpF,oBAAS,GAA7C,mBAAOqF,EAAP,KAAmBC,EAAnB,KACMC,EAAcC,mBACdC,EAASD,mBACTE,EAAWF,mBACXG,EAAcH,mBACdtK,EAAU6E,aAAY,SAAA/D,GAAK,OAAIA,EAAMd,WACrCkB,EAAWC,cAkBjB,OACE,eAACI,EAAA,EAAD,CAAMD,UAAU,UAAU+F,MAAO,CAACC,SAAU,SAA5C,UACE,eAAC/F,EAAA,EAAKM,KAAN,WACE,oBAAIP,UAAU,mBAAd,qBACA,eAACiG,GAAA,EAAD,CAAMC,SAnBW,SAAC3B,GnBuHF,IAACjJ,EAAUC,EAAKC,EAAOC,EmBtH3C8I,EAAM4B,iBACN2C,GAAc,GACdlJ,GnBoHqBtE,EmBpHHyN,EAAYK,QAAQhF,MnBoHP7I,EmBpHc0N,EAAOG,QAAQhF,MnBoHxB5I,EmBpH+B0N,EAASE,QAAQhF,MnBoHzC3I,EmBpHgD0N,EAAYC,QAAQhF,MnBoHvD,SAACxE,GAC3D,OAAOxE,EAAYC,SAASC,EAAUC,EAAKC,EAAOC,GAAUI,MAC1D,SAACd,GAMC,OALA6E,EAAS,CACPZ,KAAMvB,IAERmC,EAASb,EAAWhE,EAASC,KAAK0D,UAE3B2K,QAAQC,aAEjB,SAACC,GACC,IAAM7K,EACH6K,EAAMxO,UACLwO,EAAMxO,SAASC,MACfuO,EAAMxO,SAASC,KAAK0D,SACtB6K,EAAM7K,SACN6K,EAAMC,WAOR,OALA5J,EAAS,CACPZ,KAAMtB,IAERkC,EAASb,EAAWL,IAEb2K,QAAQI,emB1Id5N,MAAK,WACJiN,GAAc,GACdY,YAAW,WACTf,EAAQrG,KAAK,YACZ,QAEJqH,OAAM,WACLb,GAAc,OAQd,WACID,GAAc,qCACd,eAAC5C,GAAA,EAAKG,MAAN,CAAYlL,GAAG,WAAf,UACE,cAAC+K,GAAA,EAAKI,MAAN,wBACA,cAACJ,GAAA,EAAKK,QAAN,CAActH,KAAK,OAAO4K,IAAKb,EAAavC,UAAQ,OAEtD,eAACP,GAAA,EAAKG,MAAN,CAAYlL,GAAG,MAAf,UACE,cAAC+K,GAAA,EAAKI,MAAN,uBACA,cAACJ,GAAA,EAAKK,QAAN,CAActH,KAAK,SAAS4K,IAAKX,EAAQzC,UAAQ,OAEnD,eAACP,GAAA,EAAKG,MAAN,CAAYlL,GAAG,QAAf,UACE,cAAC+K,GAAA,EAAKI,MAAN,oBACA,cAACJ,GAAA,EAAKK,QAAN,CAActH,KAAK,QAAQ4K,IAAKV,EAAU1C,UAAQ,OAEpD,eAACP,GAAA,EAAKG,MAAN,CAAYlL,GAAG,WAAf,UACE,cAAC+K,GAAA,EAAKI,MAAN,uBACA,cAACJ,GAAA,EAAKK,QAAN,CAActH,KAAK,WAAW4K,IAAKT,EAAa3C,UAAQ,OAE1D,cAACtF,EAAA,EAAD,CAAQlC,KAAK,SAASgB,UAAU,aAAhC,wBAKDtB,GACC,qBAAKsB,UAAU,aAAf,SACE,qBAAKA,UAAY6I,EAAa,sBAAwB,qBAAuBvB,KAAK,QAAlF,SACG5I,YAMX,eAACuB,EAAA,EAAKgB,OAAN,CAAajB,UAAU,yBAAvB,sCAC2B,cAAC,IAAD,CAASqB,GAAG,SAAZ,2BDpDOoH,OAAO,GAC7C,CAAEF,KAAM,SAAUC,UEXN,WACZ,IAAMqB,EAAYb,kBAAO,GACnBL,EAAUC,cAChB,EAAoCpF,oBAAS,GAA7C,mBAAOqF,EAAP,KAAmBC,EAAnB,KACMI,EAAWF,mBACXG,EAAcH,mBAEdtK,EAAU6E,aAAY,SAAA/D,GAAK,OAAIA,EAAMd,WACrCkB,EAAWC,cAGjB+D,qBAAU,WACR,OAAO,WAAOiG,EAAUT,SAAU,KACjC,IAqBH,OACE,eAACnJ,EAAA,EAAD,CAAMD,UAAU,UAAU+F,MAAO,CAACC,SAAU,SAA5C,UACE,eAAC/F,EAAA,EAAKM,KAAN,WACE,oBAAIP,UAAU,mBAAd,mBACA,eAACiG,GAAA,EAAD,CAAMC,SAvBQ,SAAC3B,GpB8IF,IAACjJ,EAAUG,EoB7I5B8I,EAAM4B,iBACN2C,GAAc,GACdlJ,GpB2IkBtE,EoB3IH4N,EAASE,QAAQhF,MpB2IJ3I,EoB3IW0N,EAAYC,QAAQhF,MpB2IlB,SAACxE,GAC5C,OAAOxE,EAAYQ,MAAMN,EAAUG,GAAUI,MAC3C,SAACb,GAMC,OALA4E,EAAS,CACPZ,KAAMrB,EACNsB,QAAS,CAAEtD,KAAMX,EAAKW,QAGjB0N,QAAQC,aAEjB,SAACC,GACC,IAAM7K,EACH6K,EAAMxO,UACLwO,EAAMxO,SAASC,MACfuO,EAAMxO,SAASC,KAAK0D,SACtB6K,EAAM7K,SACN6K,EAAMC,WAOR,OALA5J,EAAS,CACPZ,KAAMpB,IAERgC,EAASb,EAAWL,IAEb2K,QAAQI,eoBjKd5N,MAAK,WACCgO,EAAUT,UACbN,GAAc,GACdY,YAAW,WACTf,EAAQrG,KAAK,aACZ,SAGNqH,OAAM,WACAE,EAAUT,SACbN,GAAc,OAShB,WACID,GAAc,qCACd,eAAC5C,GAAA,EAAKG,MAAN,CAAYlL,GAAG,QAAf,UACE,cAAC+K,GAAA,EAAKI,MAAN,oBACA,cAACJ,GAAA,EAAKK,QAAN,CAActH,KAAK,QAAQ4K,IAAKV,EAAU1C,UAAQ,OAEpD,eAACP,GAAA,EAAKG,MAAN,CAAYlL,GAAG,WAAf,UACE,cAAC+K,GAAA,EAAKI,MAAN,uBACA,cAACJ,GAAA,EAAKK,QAAN,CAActH,KAAK,WAAW4K,IAAKT,EAAa3C,UAAQ,OAE1D,cAACtF,EAAA,EAAD,CAAQlC,KAAK,SAASgB,UAAU,aAAhC,sBAIDtB,GACC,qBAAKsB,UAAU,aAAf,SACE,qBAAKA,UAAY6I,EAAa,sBAAwB,qBAAuBvB,KAAK,QAAlF,SACG5I,YAMX,eAACuB,EAAA,EAAKgB,OAAN,CAAajB,UAAU,yBAAvB,wCAC6B,cAAC,IAAD,CAASqB,GAAG,UAAZ,kCFnDGoH,OAAO,I,oBG4E9BqB,GAvFI,WACjB,IAAMlK,EAAWC,cAKXkK,EAAYC,cACZC,EAAQC,YAAUH,EAAUI,SAAU,CAC1C5B,KAAM,aACNE,OAAO,IAGT,OACE,cAAC2B,EAAA,EAAD,UACE,sBAAKpK,UAAWmE,KAAIkG,IAApB,UACE,cAAC,IAAD,CAAShJ,GAAG,UAAUrB,UAAWmE,KAAImG,QAArC,2BACA,qBAAItK,UAAWmE,KAAIoG,OAAnB,UACE,oBAAIvK,UAAYiK,EAAQ9F,KAAIqG,QAAUrG,KAAIsG,OAA1C,SACE,cAAC,IAAD,CACEpJ,GAAI0I,EAAUI,SACdnK,UAAWmE,KAAIuG,QACfC,gBAAiBxG,KAAIpC,OAHvB,qBAQF,6BACE,cAAC,IAAD,CACEV,GAAG,UACHrB,UAAWmE,KAAIuG,QACfC,gBAAiBxG,KAAIpC,OAHvB,0BAQF,6BACE,cAAC,IAAD,CACEV,GAAG,YACHrB,UAAWmE,KAAIuG,QACfC,gBAAiBxG,KAAIpC,OAHvB,wBAQF,6BACE,cAAC,IAAD,CACEV,GAAG,SACHrB,UAAWmE,KAAIuG,QACfC,gBAAiBxG,KAAIpC,OAHvB,qBAQF,6BACE,cAAC,IAAD,CACEV,GAAG,WACHrB,UAAWmE,KAAIuG,QACfC,gBAAiBxG,KAAIpC,OAHvB,uBAQF,6BACE,cAAC,IAAD,CACEV,GAAG,WACHrB,UAAWmE,KAAIuG,QACfC,gBAAiBxG,KAAIpC,OAHvB,uBAQF,6BACE,cAAC,IAAD,CACEV,GAAG,SACHrB,UAAWmE,KAAIuG,QACfC,gBAAiBxG,KAAIpC,OACrBZ,QAzEG,WACbvB,GrBqLwB,SAACA,GAC3BxE,EAAYe,SACZyD,EAASV,KACTU,EAAS,CAACZ,KAAMnB,QqBpHN,gC,oBCrEG+M,GARA,WACb,OACE,wBAAQ5K,UAAWmE,KAAI0G,OAAvB,SACE,cAAC,GAAD,OCqDSC,GAlDG,WAChB,IAAMrM,EAAa8E,aAAY,SAAA/D,GAAK,OAAIA,EAAMf,cACxCkK,EAAUC,cACVhJ,EAAWC,cASjB,OAPA+D,qBAAU,WACR+E,EAAQoC,QAAO,SAACC,GACdpL,EAASV,UAEV,CAACU,IAGInB,EACN,qCACE,cAAC,GAAD,IACA,cAAC2L,EAAA,EAAD,CAAWpK,UAAU,OAArB,SACE,eAAC,IAAD,WACGsI,GAAc3G,KAAI,SAACsJ,GAClB,OACE,cAAC,IAAD,CACEzC,UAAWyC,EAAMzC,UACjBD,KAAM0C,EAAM1C,KACZE,MAAOwC,EAAMxC,OACRwC,EAAM1C,SAIjB,cAAC,IAAD,CAAUlH,GAAG,oBAKnB,qBAAKrB,UAAU,OAAf,SACE,eAAC,IAAD,WACG0I,GAAa/G,KAAI,SAACsJ,GACjB,OACE,cAAC,IAAD,CACEzC,UAAWyC,EAAMzC,UACjBD,KAAM0C,EAAM1C,KACZE,MAAOwC,EAAMxC,OACRwC,EAAM1C,SAIjB,cAAC,IAAD,CAAUlH,GAAG,kB,kBC/CN6J,GAFDC,aAAY5L,EAAS6L,aAAgBC,OCYpCC,GAVH,WACV,OACE,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACE,cAAC,IAAD,UACI,cAAC,GAAD,S,MCJVK,IAASC,OACP,cAAC,GAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d09f6807.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__2zjCY\",\"navBar\":\"Navigation_navBar__2Ur4a\",\"navLogo\":\"Navigation_navLogo__1rl-o\",\"navLink\":\"Navigation_navLink__1tWmU\",\"active\":\"Navigation_active__U5W4s\",\"hidden\":\"Navigation_hidden__1AS7C\",\"visible\":\"Navigation_visible__2JQZp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cast\":\"MovieCast_cast__1gtUA\",\"card\":\"MovieCast_card__3e_6k\",\"body\":\"MovieCast_body__23nt6\",\"role\":\"MovieCast_role__3njMG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie\":\"AboutMovie_movie__BvNf2\",\"body\":\"AboutMovie_body__2MDOu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2mbF3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movie\":\"MoviePage_movie__cpDdV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1o6iq\"};","import axios from 'axios';\r\n\r\nexport const getAllMovies = async () => {\r\n  const response = await axios.get('https://api.tvmaze.com/shows?page=1');\r\n  return response.data;\r\n};\r\n\r\nexport const getMovieById = async (id) => {\r\n  const response = await axios.get(`https://api.tvmaze.com/shows/${id}`);\r\n  return response.data;\r\n};\r\n\r\nexport const getCastByMovieId = async (id) => {\r\n  const response = await axios.get(`https://api.tvmaze.com/shows/${id}/cast`);\r\n  return response.data;\r\n};","import axios from \"axios\";\r\n\r\nconst API_URL = \"\";\r\n\r\nconst register = (username, age, email, password) => {\r\n  return axios.post(API_URL + \"/api/auth/register\", {\r\n    user: {\r\n      username,\r\n      age,\r\n      email,\r\n      password\r\n    }\r\n  });\r\n};\r\n\r\nconst login = (email, password) => {\r\n  return axios\r\n    .post(API_URL + \"/api/auth/login\", {\r\n      email,\r\n      password,\r\n    })\r\n    .then((response) => {\r\n      if (response.data.accessToken) {\r\n        localStorage.setItem(\"stream-movie-user\", JSON.stringify(response.data));\r\n      }\r\n\r\n      return response.data;\r\n    });\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"stream-movie-user\");\r\n};\r\n\r\nconst AuthService = {\r\n  register,\r\n  login,\r\n  logout\r\n};\r\n\r\nexport default AuthService;","export const authHeader = () => {\r\n  const user = JSON.parse(localStorage.getItem('stream-movie-user'));\r\n\r\n  if (user && user.accessToken) {\r\n    return { Authorization: 'Bearer ' + user.accessToken };\r\n  } else {\r\n    return {};\r\n  }\r\n};","import axios from \"axios\";\r\nimport {authHeader} from \"./auth-header\";\r\n\r\nconst API_URL = \"\";\r\n// const API_URL = \"http://localhost:8080\";\r\n\r\nconst getUserProfile = () => {\r\n  return axios.get(API_URL + \"/api/users/me\", { headers: authHeader() });\r\n};\r\n\r\nconst updateUserProfile = (user) => {\r\n  return axios.patch(API_URL + \"/api/users/me\", user, {headers: authHeader()});\r\n};\r\n\r\nconst getFriends = () => {\r\n  return axios.get(API_URL + \"/api/users/findUsers\", { headers: authHeader() });\r\n};\r\n\r\nconst getUserFriends = () => {\r\n  return axios.get(API_URL + \"/api/users/me/friends\", { headers: authHeader() });\r\n};\r\n\r\nconst addFriend = (friendId) => {\r\n  return axios.patch(API_URL + \"/api/users/me/addFriend\", { friendId }, { headers: authHeader() });\r\n};\r\n\r\nconst removeFriend = (friendId) => {\r\n  return axios.patch(API_URL + \"/api/users/me/removeFriend\", { friendId }, { headers: authHeader() });\r\n};\r\n\r\nconst getFavorite = () => {\r\n  return axios.get(API_URL + \"/api/users/me/favorite\", { headers: authHeader() });\r\n};\r\n\r\nconst addMovie = (movie) => {\r\n  return axios.patch(API_URL + \"/api/users/me/addMovie\", { movie }, {headers: authHeader()});\r\n};\r\n\r\nconst removeMovie = (movieId) => {\r\n  return axios.patch(API_URL + \"/api/users/me/removeMovie\", { movieId }, {headers: authHeader()});\r\n};\r\n\r\nconst UserService = {\r\n  getUserProfile,\r\n  updateUserProfile,\r\n  addMovie,\r\n  getFavorite,\r\n  removeMovie,\r\n  getFriends,\r\n  getUserFriends,\r\n  addFriend,\r\n  removeFriend\r\n};\r\n\r\nexport default UserService;","import { getAllMovies } from \"../../API/api\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport UserService from \"../../services/user.service\";\r\n\r\nconst REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nconst REGISTER_FAIL = \"REGISTER_FAIL\";\r\nconst LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nconst LOGIN_FAIL = \"LOGIN_FAIL\";\r\nconst LOGOUT = \"LOGOUT\";\r\n\r\nconst SET_MESSAGE = \"SET_MESSAGE\";\r\nconst CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\n\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst SET_FAVORITE_MOVIES = \"SET_FAVORITE_MOVIES\";\r\nconst LOADING = \"LOADING\";\r\nconst SET_ALL_MOVIES = \"SET_ALL_MOVIES\";\r\n\r\nconst SET_ALL_USERS = \"SET_ALL_USERS\";\r\n\r\nconst SET_FRIENDS = \"SET_FRIENDS\";\r\n\r\nconst user = JSON.parse(localStorage.getItem(\"stream-movie-user\"));\r\n\r\nconst initialState = {\r\n  allMovies: [],\r\n  isLoading: false,\r\n  isLoggedIn: user ? true : false,\r\n  user: user ? user : null,\r\n  message: \"\",\r\n  favoriteMovies: [],\r\n  userProfile: {},\r\n  userFriends: [],\r\n  allUsers: []\r\n};\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n  switch (action.type) {\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: action.payload\r\n      };\r\n\r\n    case SET_ALL_MOVIES:\r\n      return {\r\n        ...state,\r\n        allMovies: action.payload\r\n      };\r\n\r\n    case SET_FAVORITE_MOVIES:\r\n      return {\r\n        ...state,\r\n        favoriteMovies: action.payload\r\n      };\r\n\r\n    case SET_USER_PROFILE:\r\n      return {\r\n        ...state,\r\n        userProfile: action.payload\r\n      };\r\n\r\n    case SET_FRIENDS:\r\n      return {\r\n        ...state,\r\n        userFriends: action.payload\r\n      };\r\n    \r\n    case SET_ALL_USERS:\r\n      return {\r\n        ...state,\r\n        allUsers: action.payload\r\n      };\r\n\r\n    case SET_MESSAGE:\r\n      return {\r\n        ...state,\r\n        message: action.payload\r\n      };\r\n\r\n    case CLEAR_MESSAGE:\r\n      return {\r\n        ...state,\r\n        message: \"\"\r\n      };\r\n\r\n    case REGISTER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n      };\r\n\r\n    case REGISTER_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n      };\r\n\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        user: action.payload.user,\r\n      };\r\n\r\n    case LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        user: null,\r\n        userProfile: null,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n//message action\r\n\r\nexport const setMessage = (message) => ({\r\n  type: SET_MESSAGE,\r\n  payload: message,\r\n});\r\n\r\nexport const clearMessage = () => ({\r\n  type: CLEAR_MESSAGE,\r\n});\r\n\r\n\r\n//auth\r\nexport const register = (username, age, email, password) => (dispatch) => {\r\n  return AuthService.register(username, age, email, password).then(\r\n    (response) => {\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n      });\r\n      dispatch(setMessage(response.data.message));\r\n\r\n      return Promise.resolve();\r\n    },\r\n    (error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n      });\r\n      dispatch(setMessage(message));\r\n\r\n      return Promise.reject();\r\n    }\r\n  );\r\n};\r\n\r\nexport const login = (username, password) => (dispatch) => {\r\n  return AuthService.login(username, password).then(\r\n    (data) => {\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: { user: data.user },\r\n      });\r\n\r\n      return Promise.resolve();\r\n    },\r\n    (error) => {\r\n      const message =\r\n        (error.response &&\r\n          error.response.data &&\r\n          error.response.data.message) ||\r\n        error.message ||\r\n        error.toString();\r\n\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n      });\r\n      dispatch(setMessage(message));\r\n\r\n      return Promise.reject();\r\n    }\r\n  );\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  AuthService.logout();\r\n  dispatch(clearMessage());\r\n  dispatch({type: LOGOUT });\r\n};\r\n\r\n//actions\r\nconst isLoading = ( isLoading ) => ({type: LOADING, payload: isLoading});\r\n\r\nconst setAllMovies = ( allMovies ) => ({type: SET_ALL_MOVIES, payload: allMovies});\r\n\r\nconst setFavoriteMovies = ( favoriteMovies ) => ({type: SET_FAVORITE_MOVIES, payload: favoriteMovies});\r\n\r\nconst setUserProfile = ( userProfile ) => ({type: SET_USER_PROFILE, payload: userProfile});\r\n\r\nconst setAllUsers = ( users ) => ({type: SET_ALL_USERS, payload: users});\r\n\r\nconst setFriends = ( users ) => ({type: SET_FRIENDS, payload: users});\r\n\r\nexport const fetchAllMovies = () => async ( dispatch ) => {\r\n  dispatch(isLoading(true));\r\n  const movies = await getAllMovies();\r\n  dispatch(setAllMovies(movies));\r\n  dispatch(isLoading(false));\r\n};\r\n\r\nexport const fetchUserProfile = () => async ( dispatch ) => {\r\n  dispatch(isLoading(true));\r\n  const response = await UserService.getUserProfile();\r\n  dispatch(setUserProfile(response.data.user));\r\n  dispatch(isLoading(false));\r\n};\r\n\r\nexport const updateUserProfile = (user) => async ( dispatch ) => {\r\n  dispatch(isLoading(true));\r\n  const response = await UserService.updateUserProfile(user);\r\n  dispatch(setUserProfile(response.data.user));\r\n  dispatch(isLoading(false));\r\n};\r\n\r\nexport const fetchFavoriteMovies = () => async ( dispatch ) => {\r\n  dispatch(isLoading(true));\r\n  const movies = await UserService.getFavorite();\r\n  dispatch(setFavoriteMovies(movies.data));\r\n  dispatch(isLoading(false));\r\n};\r\n\r\nexport const deleteFavoriteMovie = (id) => async ( dispatch ) => {\r\n  const movies = await UserService.removeMovie(id);\r\n  dispatch(setFavoriteMovies(movies.data));\r\n};\r\n\r\nexport const fetchAllUsers = () => async ( dispatch ) => {\r\n  dispatch(isLoading(true));\r\n  const response = await UserService.getFriends();\r\n  dispatch(setAllUsers(response.data.findUsers));\r\n  dispatch(isLoading(false));\r\n};\r\n\r\nexport const fetchUserFriends = () => async ( dispatch ) => {\r\n  dispatch(isLoading(true));\r\n  const response = await UserService.getUserFriends();\r\n  dispatch(setFriends(response.data.users));\r\n  dispatch(isLoading(false));\r\n};\r\n\r\nexport const deleteFriend = (id) => async ( dispatch ) => {\r\n  const response = await UserService.removeFriend(id);\r\n  dispatch(setFriends(response.data.users));\r\n};\r\n\r\nexport default reducer;","import React from 'react';\r\n\r\n\r\nimport {useDispatch } from 'react-redux';\r\n\r\nimport { Col, Card, Button } from 'react-bootstrap';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport UserService from '../services/user.service';\r\n\r\nimport { deleteFavoriteMovie } from '../redux/reducers/reducer';\r\n\r\nconst MovieItem = ({ movie, isFavorite }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const addToFavorite = async () => {\r\n    await UserService.addMovie(movie);\r\n  };\r\n\r\n  const deleteFromFavorite = () => {\r\n    dispatch(deleteFavoriteMovie(movie.id));\r\n  };\r\n\r\n  return (\r\n      <Col className=\"mb-4\">\r\n        <Card className=\"border-0\">\r\n          <Card.Img variant=\"top\" src={ movie.image?.medium }/>\r\n          <Card.Body>\r\n            <Card.Title className=\"fs-3 fw-bold\">{movie.name}</Card.Title>\r\n            <Card.Text className=\"fst-italic\">\r\n              {movie.genres.length\r\n                ? movie.genres.join(\", \")\r\n                : \"Genre not defined\"}\r\n            </Card.Text>\r\n            <Card.Text className=\"fw-bold\">\r\n              <i className=\"bi bi-star-fill text-warning me-2\" />\r\n              {movie.rating.average ? movie.rating.average : \"Rating not defined\"}\r\n            </Card.Text>\r\n            <Card.Text className=\"fst-normal\">\r\n              Language: {movie.language}\r\n            </Card.Text>\r\n          </Card.Body>\r\n          <Card.Footer className=\"d-flex flex-column\">\r\n            {isFavorite ?\r\n              <Button className=\"btn-danger mb-2\" onClick={deleteFromFavorite}>\r\n                <i className=\"bi bi-trash me-2\" />\r\n                Remove from Favorite\r\n              </Button> :\r\n              <Button className=\"btn-warning mb-2\" onClick={addToFavorite}>\r\n                <i className=\"bi bi-suit-heart-fill me-2\" />\r\n                Add to Favorite\r\n              </Button>\r\n            }\r\n            <Link className=\"btn btn-info\" to={`/about/${movie.id}`}>\r\n            <i className=\"bi bi-info-circle-fill me-2\" />\r\n              About Movie\r\n            </Link>\r\n          </Card.Footer>\r\n        </Card>\r\n      </Col>\r\n  );\r\n};\r\n\r\nexport default MovieItem;","import React from 'react';\r\n\r\nimport { Row } from 'react-bootstrap';\r\nimport MovieItem from './MovieItem';\r\n\r\nconst MoviesList = ({movies, isFavorite}) => {\r\n  return (\r\n    <Row xs={1} sm={2} md={3}>\r\n      {movies.map((movie) => {\r\n        return (\r\n          <MovieItem key={movie.id} movie={movie} isFavorite={isFavorite}/>\r\n        );\r\n      })}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default MoviesList;","import React from 'react';\r\n\r\nimport { Pagination } from 'react-bootstrap';\r\n\r\nconst PaginationMovies = ({totalPage, changePage, active}) => {\r\n  const getPagesArray = (totalPage) => {\r\n    let pagesArray = [];\r\n  \r\n    for (let i = 1; i <= totalPage; i++) {\r\n      const pageItem = (\r\n        <Pagination.Item key={i} number={i} active={i === active} onClick={() => changePage(i)}>\r\n          {i}\r\n        </Pagination.Item>\r\n      );\r\n\r\n      pagesArray.push(pageItem);\r\n    }\r\n\r\n    const activePage = pagesArray.find(item => item.props.active);\r\n\r\n    if(activePage) {\r\n      return pagesArray.filter(page => {\r\n        const prev = activePage.props.number - 3;\r\n        const next = activePage.props.number + 3;\r\n        let prev1 = next - totalPage > 0 ? prev - (next - totalPage) + 1 : prev;\r\n        let next1 = prev < 0 ? next - prev : next;\r\n        \r\n        return page.props.number > prev1 && page.props.number < next1;\r\n      });\r\n    }\r\n\r\n    return pagesArray;\r\n  };\r\n\r\n  const pagesArray = getPagesArray(totalPage);\r\n  return (\r\n    <Pagination className=\"justify-content-end flex-wrap\">\r\n      {pagesArray}\r\n    </Pagination>\r\n  );\r\n};\r\n\r\nexport default PaginationMovies;","import React from 'react';\r\n\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst LoadingSpinner = () => {\r\n  return (\r\n  <Spinner animation=\"border\" size=\"lg\" variant=\"primary\">\r\n    <span className=\"visually-hidden\">Loading...</span>\r\n  </Spinner>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;","import React, { useEffect, useState} from 'react';\r\nimport MoviesList from '../../components/MoviesList';\r\nimport PaginationMovies from '../../components/Pagination';\r\nimport LoadingSpinner from '../../components/LoadingSpinner';\r\n\r\nimport { fetchFavoriteMovies } from '../../redux/reducers/reducer';\r\n\r\nimport {useDispatch, useSelector } from 'react-redux';\r\n\r\nconst Favorite = () => {\r\n\r\n  const favoriteMovies = useSelector( state => state.favoriteMovies);\r\n  const isLoading = useSelector( state => state.isLoading);\r\n  const dispatch = useDispatch()\r\n  const movPerPage = 12;\r\n  const [page, setPage] = useState(1);\r\n  const [viewMovies, setViewMovies] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchFavoriteMovies());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setViewMovies([...favoriteMovies.slice((page - 1)*movPerPage, page*movPerPage)]);\r\n  }, [favoriteMovies, page]);\r\n\r\n  const changePage = (page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex justify-content-end sticky-top\">\r\n        <PaginationMovies \r\n          changePage={changePage}\r\n          totalPage={Math.ceil(favoriteMovies.length/movPerPage)}\r\n          active={page}\r\n        />\r\n      </div>\r\n      { isLoading ? \r\n        <LoadingSpinner /> :\r\n        !favoriteMovies.length ? <h1 className=\"text-center text-white mt-3\">Not Found</h1>:\r\n        <MoviesList movies={viewMovies}  isFavorite={true} />\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Favorite;","import React from 'react';\r\n\r\nimport cls from './Filter.module.scss';\r\n\r\nconst Filter = ({options, filter, setFilter}) => {\r\n  const setSort = ( event ) => {\r\n    setFilter({...filter, sort: event.target.value || ''});\r\n  };\r\n\r\n  const setSearch = ( event ) => {\r\n    setFilter({...filter, query: event.target.value || ''});\r\n  };\r\n\r\n  return (\r\n    <div className={cls.filter}>\r\n      <select\r\n      value={filter.sort}\r\n      onChange={setSort}\r\n      >\r\n        <option value=\"\">All Genres</option>\r\n        {options.map(option => \r\n          <option key={option} value={option}>\r\n            {option}\r\n          </option>\r\n        )}\r\n      </select>\r\n\r\n      <input\r\n        value={filter.query||''}\r\n        onChange={setSearch}\r\n        placeholder=\"Search by movie name...\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;","import React, { useEffect, useState } from 'react';\r\n\r\nimport MoviesList from '../../components/MoviesList';\r\nimport PaginationMovies from '../../components/Pagination';\r\nimport LoadingSpinner from '../../components/LoadingSpinner';\r\nimport Filter from '../../components/Filter/Filter';\r\n\r\nimport { fetchAllMovies } from '../../redux/reducers/reducer';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useFilter } from '../../hooks/useFilter';\r\nimport { getGenresByMoviesList } from '../../utils/utils';\r\n\r\nconst AllMovies = () => {\r\n  const allMovies = useSelector( state => state.allMovies);\r\n  const isLoading = useSelector( state => state.isLoading);\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const movPerPage = 12;\r\n  const [filter, setFilter] = useState({query: '', sort: ''});\r\n  const [page, setPage] = useState(1);\r\n  const [viewMovies, setViewMovies] = useState([]);\r\n\r\n  const filteredMovies = useFilter(filter, allMovies);\r\n  const genresList = getGenresByMoviesList(allMovies);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchAllMovies());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setViewMovies([...filteredMovies.slice((page - 1)*movPerPage, page*movPerPage)]);\r\n  }, [filteredMovies, page]);\r\n\r\n  const changePage = (page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex justify-content-between sticky-top mb-4\">\r\n        <Filter \r\n          filter={filter}\r\n          setFilter={setFilter}\r\n          options={genresList}\r\n        />\r\n        <PaginationMovies \r\n          changePage={changePage}\r\n          totalPage={Math.ceil(filteredMovies.length/movPerPage)}\r\n          active={page}\r\n        />\r\n      </div>\r\n      { isLoading ? \r\n        <LoadingSpinner /> :\r\n        !filteredMovies.length ? <h1 className=\"text-center text-white mt-3\">Not Found</h1>:\r\n        <MoviesList movies={viewMovies} isFavorite={false} />\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllMovies;","import { useMemo } from \"react\";\r\n\r\nexport const useFilter = (filter, allMovies) => {\r\n  const filteredMovies = useMemo(() => {\r\n    return allMovies.filter( movie => {\r\n  \r\n      if (filter.sort && !filter.query) {\r\n        return movie.genres.some( genre => genre.toLowerCase().includes(filter.sort.toLowerCase()));\r\n      }\r\n  \r\n      if ( !filter.sort && !filter.query ) {\r\n        return movie;\r\n      }\r\n  \r\n      return movie.genres.some( genre => genre.toLowerCase().includes(filter.sort.toLowerCase())) && movie.name.toLowerCase().includes(filter.query.toLowerCase());\r\n    });\r\n  }, [filter, allMovies]);\r\n\r\n  return filteredMovies;\r\n};","export const getGenresByMoviesList = (movies) => {\r\n  const genreHeap = movies.reduce((acc,item) => {\r\n    acc.push(...item.genres);\r\n    return acc;\r\n  }, []);\r\n  const uniqueGenres = new Set(genreHeap);\r\n  const genresList = [...uniqueGenres].sort();\r\n\r\n  return genresList;\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchUserProfile, updateUserProfile } from '../../redux/reducers/reducer';\r\n\r\nimport { Form, Button, Card } from 'react-bootstrap';\r\n\r\nconst Profile = () => {\r\n  const user = useSelector(state => state.user);\r\n  const userProfile = useSelector(state => state.userProfile);\r\n  const [username, setUsername] = useState(userProfile?.username || user.username);\r\n  const [age, setAge] = useState(userProfile?.age || user.age);\r\n  const [email, setEmail] = useState(userProfile?.email || user.email);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeUsername = (e) => {\r\n    const username = e.target.value;\r\n    setUsername(username);\r\n  };\r\n\r\n  const onChangeAge = (e) => {\r\n    const age = e.target.value;\r\n    setAge(age);\r\n  };\r\n\r\n  const onChangeEmail = (e) => {\r\n    const email = e.target.value;\r\n    setEmail(email);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUserProfile());\r\n  }, []);\r\n\r\n  const handleUpdate = (event) => {\r\n    event.preventDefault();\r\n    dispatch(updateUserProfile({username, age, email}));\r\n  };\r\n  return (\r\n    <Card className=\"mx-auto\" style={{maxWidth: \"400px\"}}>\r\n      <Card.Body>\r\n        <h2 className=\"text-center mb-4\">Profile</h2>\r\n        <Form onSubmit={handleUpdate}>\r\n        <Form.Group id=\"userName\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control type=\"text\" value={username} onChange={onChangeUsername} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"age\">\r\n              <Form.Label>Age</Form.Label>\r\n              <Form.Control type=\"number\" value={age} onChange={onChangeAge} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" value={email} onChange={onChangeEmail} required />\r\n            </Form.Group>\r\n            <Button type=\"submit\" className=\"w-100 mt-3\">\r\n              Update\r\n            </Button>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\n\r\nimport cls from './AboutMovie.module.scss'\r\nimport UserService from '../../services/user.service';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst AboutMovie = ({movie}) => {\r\n  const addToFavorite = async () => {\r\n    await UserService.addMovie(movie);\r\n  };\r\n\r\n  return (\r\n    <div className={cls.movie}>\r\n      <img src={movie.image.original} alt={movie.name} />\r\n      <div className={cls.body}>\r\n        <h1>{movie.name}</h1>\r\n        <div>\r\n          <p>\r\n            Genres: {movie.genres.length\r\n              ? movie.genres.join(\" | \")\r\n              : \"Genre not defined\"}\r\n          </p>\r\n          <p>\r\n            Show Type: {movie.type}\r\n          </p>\r\n          <p>\r\n            <i className=\"bi bi-star-fill text-warning me-2\" />\r\n            {movie.rating.average ? movie.rating.average : \"Rating not defined\"}\r\n          </p>\r\n          <p>Language: {movie.language}</p>\r\n        </div>\r\n        <p>{movie.summary.replace(/(<([^>]+)>)/gi, \"\")}</p>\r\n        <p><a href={movie.officialSite}>Official site</a></p>\r\n        <Button className=\"btn-warning mb-2\" onClick={addToFavorite}>\r\n          <i className=\"bi bi-suit-heart-fill me-2\" />\r\n          Add to Favorite\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutMovie;","import React from 'react';\r\nimport cls from './MovieCast.module.scss';\r\n\r\nconst MovieCast = ({cast}) => {\r\n  return (\r\n    <div className={cls.cast}>\r\n      <h3>Cast</h3>\r\n      <ul>\r\n        {cast.map(item => {\r\n          const {person, character} = item;\r\n          return (\r\n            <li key={person.id} className={cls.card}>\r\n              <img src={person.image.medium} alt={person.name} />\r\n              <div className={cls.body}>\r\n                <h4>{person.name}</h4>\r\n                <p className={cls.role}>\r\n                  <span>as</span> {character.name}\r\n                </p>\r\n              </div>\r\n            </li>\r\n          )\r\n        })}\r\n      </ul>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCast;","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getMovieById, getCastByMovieId } from '../../API/api';\r\n\r\n\r\nimport AboutMovie from '../../components/AboutMovie/AboutMovie';\r\nimport MovieCast from '../../components/MovieCast/MovieCast';\r\nimport LoadingSpinner from '../../components/LoadingSpinner';\r\n\r\nimport cls from './MoviePage.module.scss';\r\n\r\nconst MoviePage = () => {\r\n  const { id } = useParams();\r\n  const [movieInfo, setMovieInfo] = useState({movie: null, cast: null});\r\n  const [isLoadInfo, setIsLoadInfo] = useState(false);\r\n\r\n  const fetchMovie = async () => {\r\n    setIsLoadInfo(false);\r\n    const movie = await getMovieById(id);\r\n    const cast = await getCastByMovieId(id);\r\n    setMovieInfo({movie: movie, cast: cast});\r\n    setIsLoadInfo(true);\r\n  };\r\n  \r\n  useEffect(() => {\r\n    fetchMovie();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      { isLoadInfo ?\r\n        <div className={cls.movie}>\r\n          <AboutMovie movie={movieInfo.movie} />\r\n          <MovieCast cast={movieInfo.cast} />\r\n        </div> :\r\n        <LoadingSpinner />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoviePage;","import React from 'react';\r\nimport {useDispatch } from 'react-redux';\r\nimport { Col, Card, Button } from 'react-bootstrap';\r\n\r\nimport UserService from '../services/user.service';\r\nimport { deleteFriend } from '../redux/reducers/reducer';\r\n\r\nconst UserItem = ({ user, isFriend }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const addToFriend = async () => {\r\n    await UserService.addFriend(user._id);\r\n  };\r\n\r\n  const deleteFromFriend = () => {\r\n    dispatch(deleteFriend(user._id));\r\n  };\r\n\r\n  return (\r\n    <Col className=\"mb-4\">\r\n      <Card className=\"border-0\">\r\n        <Card.Body>\r\n          <Card.Title className=\"fs-3 fw-bold\">{user.username}</Card.Title>\r\n          <Card.Text className=\"fst-normal\">\r\n            Email: {user.email}\r\n          </Card.Text>\r\n          <Card.Text className=\"fst-normal\">\r\n            Age: {user.age}\r\n          </Card.Text>\r\n        </Card.Body>\r\n        <Card.Footer className=\"d-flex flex-column\">\r\n          {isFriend ?\r\n            <Button className=\"btn-danger mb-2\" onClick={deleteFromFriend}>\r\n              Remove Friend\r\n            </Button> :\r\n            <Button className=\"btn-warning mb-2\" onClick={addToFriend}>\r\n              Add to Friend\r\n            </Button>\r\n          }\r\n        </Card.Footer>\r\n      </Card>\r\n    </Col>\r\n);\r\n};\r\n\r\nexport default UserItem;","import React from 'react';\r\nimport { Row } from 'react-bootstrap';\r\nimport UserItem from './UserItem';\r\n\r\nconst UsersList = ({users, isFriend}) => {\r\n  return (\r\n    <Row xs={1} sm={2} md={3}>\r\n      {users.map((user) => {\r\n        return (\r\n          <UserItem key={user._id} user={user} isFriend={isFriend}/>\r\n        );\r\n      })}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default UsersList;","import React, { useEffect } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { fetchAllUsers } from '../../redux/reducers/reducer';\r\n\r\nimport UsersList from '../../components/UsersList';\r\nimport LoadingSpinner from '../../components/LoadingSpinner';\r\n\r\nconst AllUsers = () => {\r\n  const allUsers = useSelector( state => state.allUsers);\r\n  const isLoading = useSelector( state => state.isLoading);\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchAllUsers());\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      { isLoading ? \r\n        <LoadingSpinner /> :\r\n        !allUsers.length ? <h1 className=\"text-center text-white mt-3\">Not Found</h1>:\r\n        <UsersList  users={allUsers} isFriend={false}/>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllUsers;","import React, { useEffect } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { fetchUserFriends } from '../../redux/reducers/reducer';\r\n\r\nimport UsersList from '../../components/UsersList';\r\nimport LoadingSpinner from '../../components/LoadingSpinner';\r\n\r\nconst Friends = () => {\r\n  const userFriends = useSelector( state => state.userFriends);\r\n  const isLoading = useSelector( state => state.isLoading);\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUserFriends());\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      { isLoading ? \r\n        <LoadingSpinner /> :\r\n        !userFriends.length ? <h1 className=\"text-center text-white mt-3\">Not Found</h1>:\r\n        <UsersList  users={userFriends} isFriend={true}/>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Friends;","import Favorite from \"../pages/Favorite/Favorite\";\r\nimport AllMovies from \"../pages/AllMovies/AllMovies\";\r\nimport Profile from \"../pages/Profile/Profile\";\r\nimport MoviePage from \"../pages/MoviePage/MoviePage\";\r\nimport Signup from \"../components/Signup/Signup\";\r\nimport Login from \"../components/Login/Login\";\r\nimport AllUsers from \"../pages/AllUsers/AllUsers\";\r\nimport Friends from \"../pages/Friends/Friends\";\r\n\r\nexport const privateRoutes = [\r\n  { path: '/about/:id', component: MoviePage, exact: true },\r\n  { path: '/favorite', component: Favorite, exact: true },\r\n  { path: '/profile', component: Profile, exact: true },\r\n  { path: '/movies', component: AllMovies, exact: true },\r\n  { path: '/users', component: AllUsers, exact: true },\r\n  { path: '/friends', component: Friends, exact: true },\r\n];\r\n\r\nexport const publicRoutes = [\r\n  { path: '/signup', component: Signup, exact: true },\r\n  { path: '/login', component: Login, exact: true },\r\n];","import React, { useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { register } from '../../redux/reducers/reducer';\r\n\r\nimport { Form, Button, Card } from 'react-bootstrap';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\n\r\nconst Signup = () => {\r\n  const history = useHistory()\r\n  const [successful, setSuccessful] = useState(false);\r\n  const userNameRef = useRef();\r\n  const ageRef = useRef();\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const message = useSelector(state => state.message);\r\n  const dispatch = useDispatch();\r\n  \r\n\r\n  const handleRegister = (event) => {\r\n    event.preventDefault();\r\n    setSuccessful(false);\r\n    dispatch(register(userNameRef.current.value, ageRef.current.value, emailRef.current.value, passwordRef.current.value))\r\n      .then(() => {\r\n        setSuccessful(true);\r\n        setTimeout(() => {\r\n          history.push(\"/login\");\r\n        }, 1000);\r\n      })\r\n      .catch(() => {\r\n        setSuccessful(false);\r\n      })\r\n  };\r\n\r\n  return (\r\n    <Card className=\"mx-auto\" style={{maxWidth: \"400px\"}}>\r\n      <Card.Body>\r\n        <h2 className=\"text-center mb-4\">Sign Up</h2>\r\n        <Form onSubmit={handleRegister}>\r\n          {!successful && <>\r\n            <Form.Group id=\"userName\">\r\n              <Form.Label>User Name</Form.Label>\r\n              <Form.Control type=\"text\" ref={userNameRef} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"age\">\r\n              <Form.Label>Your Age</Form.Label>\r\n              <Form.Control type=\"number\" ref={ageRef} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordRef} required />\r\n            </Form.Group>\r\n            <Button type=\"submit\" className=\"w-100 mt-3\">\r\n              Sign Up\r\n            </Button>\r\n          </>\r\n          }\r\n          {message && (\r\n            <div className=\"form-group\">\r\n              <div className={ successful ? \"alert alert-success\" : \"alert alert-danger\" } role=\"alert\">\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Form>\r\n      </Card.Body>\r\n      <Card.Footer className=\"w-100 text-center mt-2\">\r\n        Already have an account? <NavLink to=\"/login\">Log in</NavLink>\r\n      </Card.Footer>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Signup;","import React, { useEffect, useRef, useState }  from 'react';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { login } from '../../redux/reducers/reducer';\r\n\r\nimport { Form, Button, Card } from 'react-bootstrap';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n  const unmounted = useRef(false);\r\n  const history = useHistory()\r\n  const [successful, setSuccessful] = useState(false);\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n\r\n  const message = useSelector(state => state.message);\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  useEffect(() => {\r\n    return () => {unmounted.current = true}\r\n  }, []);\r\n\r\n  const handleLogin = (event) => {\r\n    event.preventDefault();\r\n    setSuccessful(false);\r\n    dispatch(login(emailRef.current.value, passwordRef.current.value))\r\n      .then(() => {\r\n        if (!unmounted.current) {\r\n          setSuccessful(true);\r\n          setTimeout(() => {\r\n            history.push(\"/movies\");\r\n          }, 1000);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        if (!unmounted.current) {\r\n          setSuccessful(false);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Card className=\"mx-auto\" style={{maxWidth: \"400px\"}}>\r\n      <Card.Body>\r\n        <h2 className=\"text-center mb-4\">Login</h2>\r\n        <Form onSubmit={handleLogin}>\r\n          {!successful && <>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} required />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordRef} required />\r\n            </Form.Group>\r\n            <Button type=\"submit\" className=\"w-100 mt-3\">\r\n              Login\r\n            </Button>\r\n          </>}\r\n          {message && (\r\n            <div className=\"form-group\">\r\n              <div className={ successful ? \"alert alert-success\" : \"alert alert-danger\" } role=\"alert\">\r\n                {message}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Form>\r\n      </Card.Body>\r\n      <Card.Footer className=\"w-100 text-center mt-2\">\r\n        Don't have an account yet? <NavLink to=\"/signup\"> Register now</NavLink>\r\n      </Card.Footer>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { NavLink, useLocation, matchPath } from 'react-router-dom';\r\n\r\nimport { logout } from '../../redux/reducers/reducer';\r\n\r\nimport cls from './Navigation.module.scss';\r\n\r\nconst Navigation = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const logOut = () => {\r\n    dispatch(logout());\r\n  };\r\n  const locatiton = useLocation();\r\n  const match = matchPath(locatiton.pathname, {\r\n    path: \"/about/:id\",\r\n    exact: true,\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      <nav className={cls.nav}>\r\n        <NavLink to=\"/movies\" className={cls.navLogo}>Stream-Movies</NavLink>\r\n        <ul className={cls.navBar}>\r\n          <li className={ match ? cls.visible : cls.hidden}>\r\n            <NavLink\r\n              to={locatiton.pathname}\r\n              className={cls.navLink}\r\n              activeClassName={cls.active}\r\n            >\r\n              About\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              to=\"/movies\"\r\n              className={cls.navLink}\r\n              activeClassName={cls.active}\r\n            >\r\n              All Movies\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              to=\"/favorite\"\r\n              className={cls.navLink}\r\n              activeClassName={cls.active}\r\n            >\r\n              Favorite\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              to=\"/users\"\r\n              className={cls.navLink}\r\n              activeClassName={cls.active}\r\n            >\r\n              Users\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              to=\"/friends\"\r\n              className={cls.navLink}\r\n              activeClassName={cls.active}\r\n            >\r\n              Friends\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              to=\"/profile\"\r\n              className={cls.navLink}\r\n              activeClassName={cls.active}\r\n            >\r\n              Profile\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink\r\n              to=\"/login\"\r\n              className={cls.navLink}\r\n              activeClassName={cls.active}\r\n              onClick={logOut}\r\n            >\r\n              Log Out\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport cls from './Header.module.scss';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className={cls.header}>\r\n      <Navigation />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;","import React, { useEffect} from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Switch, Route, Redirect, useHistory } from 'react-router-dom';\r\nimport { clearMessage } from '../redux/reducers/reducer';\r\n\r\nimport { privateRoutes,  publicRoutes} from '../router/routes';\r\nimport Header from './Header/Header';\r\n\r\n\r\nconst AppRouter = () => {\r\n  const isLoggedIn = useSelector(state => state.isLoggedIn);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    history.listen((location) => {\r\n      dispatch(clearMessage());\r\n    });\r\n  }, [dispatch]);\r\n\r\n\r\n  return (isLoggedIn ? \r\n    <>\r\n      <Header />\r\n      <Container className=\"mt-4\">\r\n        <Switch>\r\n          {privateRoutes.map((route) => {\r\n            return (\r\n              <Route\r\n                component={route.component}\r\n                path={route.path}\r\n                exact={route.exact}\r\n                key={route.path}\r\n              />\r\n            );\r\n          })}\r\n          <Redirect to=\"/movies\" />\r\n        </Switch>\r\n      </Container>\r\n    </>\r\n:\r\n    <div className=\"pt-5\" >\r\n      <Switch>\r\n        {publicRoutes.map((route) => {\r\n          return (\r\n            <Route\r\n              component={route.component}\r\n              path={route.path}\r\n              exact={route.exact}\r\n              key={route.path}\r\n            />\r\n          );\r\n        })}\r\n        <Redirect to=\"/signup\" />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppRouter;","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nimport reducer from './reducers/reducer';\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport AppRouter from './components/AppRouter';\n\nimport store from './redux/store';\n\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n          <AppRouter />\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}